import os
import streamlit as st
from PIL import Image
from agent import analyze_image
import base64


def image_to_base64(image):
    """Convert a PIL image to base64-encoded string."""
    with open(image, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode("utf-8")


st.set_page_config(page_title="VerifyMD", layout="wide")

st.title("VerifyMD")
st.write("A facility to help doctors review their decisions")

st.info(
    "This tool provides AI-powered analysis of medical imaging data using "
    "advanced computer vision and radiological expertise."
)
st.warning(
    "‚ö† DISCLAIMER: This tool is for educational and informational purposes only. "
    "All analyses should be reviewed by qualified healthcare professionals. "
    "Do not make medical decisions based solely on this analysis."
)

upload_container = st.container()
image_container = st.container()
analysis_container = st.container()

with upload_container:
    uploaded_file = st.file_uploader(
        "Upload the medical scan",
        type=["jpg", "png", "jpeg", "dicom"],
        help="Supported Formats are: JPG, JPEG, PNG, DICOM",
    )

if uploaded_file is not None:
    with image_container:
        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            image = Image.open(uploaded_file)
            image_path = "temp_medical_image.jpg"
            image.save(image_path)  # Save temporarily for base64 encoding

            st.image(
                image,
                caption="Uploaded Image",
                use_container_width=True,
            )

    analysis_button = st.button("üîç Analyze Image", type="primary", use_container_width=True)

    with analysis_container:
        if analysis_button:
            with st.spinner("Analyzing Image, Please Wait..."):
                try:
                    # Convert the image to base64
                    image_data_base64 = image_to_base64(image_path)
                    response = analyze_image(image_data_base64)

                    st.markdown("### üìã Analysis Results")
                    st.markdown("---")
                    st.markdown(response.content)
                    st.markdown("---")
                    st.caption(
                        "Note: This analysis is generated by AI and should be reviewed by "
                        "a qualified healthcare professional."
                    )
                except Exception as e:
                    st.error(f"Analysis Error: {e}")
                finally:
                    if os.path.exists(image_path):
                        os.remove(image_path)
else:
    st.info("üëÜ Please upload a medical image to begin analysis")
